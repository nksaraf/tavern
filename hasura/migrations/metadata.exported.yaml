version: 2
tables:
  - table:
      schema: public
      name: announcements
    configuration:
      custom_root_fields:
        insert: createAnnouncements
        select_aggregate: announcementsAggregate
        insert_one: createAnnouncement
        select_by_pk: announcement
        select: announcements
        delete: deleteAnnouncements
        update: updateAnnouncements
        delete_by_pk: deleteAnnouncement
        update_by_pk: updateAnnouncement
      custom_column_names:
        body: body
        updated_at: updatedAt
        action_description: actionDescription
        created_at: createdAt
        announcement_id: announcementId
    object_relationships:
      - name: post
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: posts
            column_mapping:
              announcement_id: announcement_id
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - announcement_id
            - body
            - action_description
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - announcement_id
            - body
            - action_description
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: answers
    configuration:
      custom_root_fields:
        insert: createAnswers
        select_aggregate: answersAggregate
        insert_one: createAnswer
        select_by_pk: answer
        select: answers
        delete: deleteAnswers
        update: updateAnswers
        delete_by_pk: deleteAnswer
        update_by_pk: updateAnswer
      custom_column_names:
        body: body
        answer_id: answerId
        updated_at: updatedAt
        user_profile_id: userProfileId
        created_at: createdAt
    object_relationships:
      - name: post
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: posts
            column_mapping:
              answer_id: answer_id
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    insert_permissions:
      - role: student
        permission:
          check:
            user_profile_id:
              _eq: x-hasura-profile-id
          set:
            user_profile_id: x-hasura-profile-id
          columns:
            - body
          backend_only: false
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - answer_id
            - body
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - answer_id
            - body
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: auth_services
    configuration:
      custom_root_fields:
        insert: createAuthServices
        select_aggregate: authServicesAggregate
        insert_one: createAuthService
        select_by_pk: authService
        select: authServices
        delete: deleteAuthServices
        update: updateAuthServices
        delete_by_pk: deleteAuthService
        update_by_pk: updateAuthService
      custom_column_names:
        auth_service_id: authServiceId
        token: token
        updated_at: updatedAt
        service_id: serviceId
        created_at: createdAt
        service_name: serviceName
        options: options
        user_id: userId
    object_relationships:
      - name: user
        using:
          foreign_key_constraint_on: user_id
    select_permissions:
      - role: student
        permission:
          columns:
            - auth_service_id
            - service_name
            - options
            - token
            - service_id
            - user_id
            - updated_at
            - created_at
          filter:
            user_id:
              _eq: X-Hasura-User-Id
  - table:
      schema: public
      name: communities
    configuration:
      custom_root_fields:
        insert: createCommunities
        select_aggregate: communitiesAggregate
        insert_one: createCommunity
        select_by_pk: community
        select: communities
        delete: deleteCommunities
        update: updateCommunities
        delete_by_pk: deleteCommunity
        update_by_pk: updateCommunity
      custom_column_names:
        community_type: communityType
        course_id: courseId
        subject_area_id: subjectAreaId
        school_id: schoolId
        community_id: communityId
        professional_area_id: professionalAreaId
        updated_at: updatedAt
        created_at: createdAt
    object_relationships:
      - name: course
        using:
          foreign_key_constraint_on: course_id
      - name: professionalArea
        using:
          foreign_key_constraint_on: professional_area_id
      - name: school
        using:
          foreign_key_constraint_on: school_id
      - name: subjectArea
        using:
          foreign_key_constraint_on: subject_area_id
    array_relationships:
      - name: posts
        using:
          foreign_key_constraint_on:
            column: community_id
            table:
              schema: public
              name: community_posts
      - name: users
        using:
          foreign_key_constraint_on:
            column: community_id
            table:
              schema: public
              name: community_users
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - community_id
            - community_type
            - school_id
            - course_id
            - subject_area_id
            - professional_area_id
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - community_id
            - community_type
            - school_id
            - course_id
            - subject_area_id
            - professional_area_id
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: community_posts
    configuration:
      custom_root_fields:
        insert: createCommunityPosts
        select_aggregate: communityPostsAggregate
        insert_one: createCommunityPost
        select_by_pk: communityPost
        select: communityPosts
        delete: deleteCommunityPosts
        update: updateCommunityPosts
        delete_by_pk: deleteCommunityPost
        update_by_pk: updateCommunityPost
      custom_column_names:
        post_id: postId
        community_id: communityId
        updated_at: updatedAt
        created_at: createdAt
    object_relationships:
      - name: community
        using:
          foreign_key_constraint_on: community_id
      - name: post
        using:
          foreign_key_constraint_on: post_id
    insert_permissions:
      - role: student
        permission:
          check: {}
          columns:
            - post_id
            - community_id
          backend_only: false
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - community_id
            - post_id
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - community_id
            - post_id
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: community_types
    is_enum: true
    configuration:
      custom_root_fields:
        insert: createCommunityTypes
        select_aggregate: communityTypesAggregate
        insert_one: createCommunityType
        select_by_pk: communityType
        select: communityTypes
        delete: deleteCommunityTypes
        update: updateCommunityTypes
        delete_by_pk: deleteCommunityType
        update_by_pk: updateCommunityType
      custom_column_names:
        value: value
  - table:
      schema: public
      name: community_users
    configuration:
      custom_root_fields:
        insert: createCommunityUsers
        select_aggregate: communityUsersAggregate
        insert_one: createCommunityUser
        select_by_pk: communityUser
        select: communityUsers
        delete: deleteCommunityUsers
        update: updateCommunityUsers
        delete_by_pk: deleteCommunityUser
        update_by_pk: updateCommunityUser
      custom_column_names:
        community_id: communityId
        updated_at: updatedAt
        user_profile_id: userProfileId
        created_at: createdAt
    object_relationships:
      - name: community
        using:
          foreign_key_constraint_on: community_id
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - community_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
      - role: student
        permission:
          columns:
            - community_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
  - table:
      schema: public
      name: courses
    configuration:
      custom_root_fields:
        insert: createCourses
        select_aggregate: coursesAggregate
        insert_one: createCourse
        select_by_pk: course
        select: courses
        delete: deleteCourses
        update: updateCourses
        delete_by_pk: deleteCourse
        update_by_pk: updateCourse
      custom_column_names:
        course_id: courseId
        subject_area_id: subjectAreaId
        school_id: schoolId
        course_number: courseNumber
        name: name
        updated_at: updatedAt
        created_at: createdAt
        subject_code: subjectCode
        description: description
    object_relationships:
      - name: community
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: communities
            column_mapping:
              course_id: course_id
      - name: school
        using:
          foreign_key_constraint_on: school_id
      - name: subjectArea
        using:
          foreign_key_constraint_on: subject_area_id
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - course_id
            - name
            - course_number
            - subject_code
            - description
            - subject_area_id
            - school_id
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - course_id
            - name
            - course_number
            - subject_code
            - description
            - subject_area_id
            - school_id
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: downvotes
    configuration:
      custom_root_fields:
        insert: createDownvotes
        select_aggregate: downvotesAggregate
        insert_one: createDownvote
        select_by_pk: downvote
        select: downvotes
        delete: deleteDownvotes
        update: updateDownvotes
        delete_by_pk: deleteDownvote
        update_by_pk: updateDownvote
      custom_column_names:
        post_id: postId
        updated_at: updatedAt
        user_profile_id: userProfileId
        created_at: createdAt
    object_relationships:
      - name: post
        using:
          foreign_key_constraint_on: post_id
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    insert_permissions:
      - role: student
        permission:
          check:
            post:
              post_type:
                _neq: QUESTION
          set:
            user_profile_id: x-hasura-profile-id
          columns:
            - post_id
          backend_only: false
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - post_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
      - role: student
        permission:
          columns:
            - post_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
    delete_permissions:
      - role: student
        permission:
          filter:
            user_profile_id:
              _eq: x-hasura-profile-id
  - table:
      schema: public
      name: note_categories
    is_enum: true
    configuration:
      custom_root_fields:
        insert: createNoteCategories
        select_aggregate: noteCategoriesAggregate
        insert_one: createNoteCategory
        select_by_pk: noteCategory
        select: noteCategories
        delete: deleteNoteCategories
        update: updateNoteCategories
        delete_by_pk: deleteNoteCategory
        update_by_pk: updateNoteCategory
      custom_column_names:
        value: value
  - table:
      schema: public
      name: notes
    configuration:
      custom_root_fields:
        insert: createNotes
        select_aggregate: notesAggregate
        insert_one: createNote
        select_by_pk: note
        select: notes
        delete: deleteNotes
        update: updateNotes
        delete_by_pk: deleteNote
        update_by_pk: updateNote
      custom_column_names:
        note_url: noteUrl
        note_id: noteId
        category: category
        updated_at: updatedAt
        created_at: createdAt
        preview_thumbnail_url: previewThumbnailUrl
        title: title
        description: description
    object_relationships:
      - name: upload
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: uploads
            column_mapping:
              note_id: note_id
    insert_permissions:
      - role: student
        permission:
          check: {}
          columns:
            - category
            - title
            - description
            - note_url
            - preview_thumbnail_url
          backend_only: false
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - note_id
            - category
            - title
            - description
            - note_url
            - preview_thumbnail_url
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - note_id
            - category
            - title
            - description
            - note_url
            - preview_thumbnail_url
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: notification_preferences
    configuration:
      custom_root_fields:
        insert: createNotificationPreferences
        select_aggregate: notificationPreferencesAggregate
        insert_one: createNotificationPreference
        select_by_pk: notificationPreference
        select: notificationPreferences
        delete: deleteNotificationPreferences
        update: updateNotificationPreferences
        delete_by_pk: deleteNotificationPreference
        update_by_pk: updateNotificationPreference
      custom_column_names:
        allow_push_notifications: allowPushNotifications
        updated_at: updatedAt
        user_profile_id: userProfileId
        created_at: createdAt
        push_notification_token: pushNotificationToken
        notification_preference_id: notificationPreferenceId
    object_relationships:
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    insert_permissions:
      - role: student
        permission:
          check:
            user_profile_id:
              _eq: x-hasura-profile-id
          set:
            user_profile_id: x-hasura-profile-id
          columns:
            - allow_push_notifications
            - push_notification_token
          backend_only: false
    select_permissions:
      - role: student
        permission:
          columns:
            - notification_preference_id
            - user_profile_id
            - allow_push_notifications
            - push_notification_token
            - updated_at
            - created_at
          filter:
            user_profile_id:
              _eq: x-hasura-profile-id
  - table:
      schema: public
      name: post_types
    is_enum: true
    configuration:
      custom_root_fields:
        insert: createPostTypes
        select_aggregate: postTypesAggregate
        insert_one: createPostType
        select_by_pk: postType
        select: postTypes
        delete: deletePostTypes
        update: updatePostTypes
        delete_by_pk: deletePostType
        update_by_pk: updatePostType
      custom_column_names:
        value: value
  - table:
      schema: public
      name: posts
    configuration:
      custom_root_fields:
        insert: createPosts
        select_aggregate: postsAggregate
        insert_one: createPost
        select_by_pk: post
        select: posts
        delete: deletePosts
        update: updatePosts
        delete_by_pk: deletePost
        update_by_pk: updatePost
      custom_column_names:
        question_id: questionId
        post_type: postType
        post_id: postId
        answer_id: answerId
        upload_id: uploadId
        updated_at: updatedAt
        created_at: createdAt
        announcement_id: announcementId
    object_relationships:
      - name: announcement
        using:
          foreign_key_constraint_on: announcement_id
      - name: answer
        using:
          foreign_key_constraint_on: answer_id
      - name: question
        using:
          foreign_key_constraint_on: question_id
      - name: responseTo
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: responses
            column_mapping:
              post_id: response_post_id
      - name: upload
        using:
          foreign_key_constraint_on: upload_id
    array_relationships:
      - name: communities
        using:
          foreign_key_constraint_on:
            column: post_id
            table:
              schema: public
              name: community_posts
      - name: downvotes
        using:
          foreign_key_constraint_on:
            column: post_id
            table:
              schema: public
              name: downvotes
      - name: upvotes
        using:
          foreign_key_constraint_on:
            column: post_id
            table:
              schema: public
              name: upvotes
    computed_fields:
      - name: upvotedByMe
        definition:
          function:
            schema: public
            name: post_upvoted_by_me
          session_argument: hasura_session
          table_argument: post
    insert_permissions:
      - role: student
        permission:
          check: {}
          columns:
            - post_type
            - question_id
            - answer_id
            - upload_id
          backend_only: false
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - post_id
            - question_id
            - upload_id
            - answer_id
            - announcement_id
            - post_type
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - post_id
            - question_id
            - upload_id
            - answer_id
            - announcement_id
            - post_type
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: professional_areas
    configuration:
      custom_root_fields:
        insert: createProfessionalAreas
        select_aggregate: professionalAreasAggregate
        insert_one: createProfessionalArea
        select_by_pk: professionalArea
        select: professionalAreas
        delete: deleteProfessionalAreas
        update: updateProfessionalAreas
        delete_by_pk: deleteProfessionalArea
        update_by_pk: updateProfessionalArea
      custom_column_names:
        professional_area_id: professionalAreaId
        name: name
        updated_at: updatedAt
        short_name: shortName
        created_at: createdAt
        description: description
    array_relationships:
      - name: communities
        using:
          foreign_key_constraint_on:
            column: professional_area_id
            table:
              schema: public
              name: communities
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - professional_area_id
            - name
            - short_name
            - description
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - professional_area_id
            - name
            - short_name
            - description
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: profiles
    configuration:
      custom_root_fields:
        insert: createProfiles
        select_aggregate: profilesAggregate
        insert_one: createProfile
        select_by_pk: profile
        select: profiles
        delete: deleteProfiles
        update: updateProfiles
        delete_by_pk: deleteProfile
        update_by_pk: updateProfile
      custom_column_names:
        use_pen_name: usePenName
        first_name: firstName
        pen_name: penName
        school_id: schoolId
        updated_at: updatedAt
        last_name: lastName
        created_at: createdAt
        avatar_url: avatarUrl
        user_id: userId
        description: description
        profile_id: profileId
    object_relationships:
      - name: notificationPreference
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: notification_preferences
            column_mapping:
              profile_id: user_profile_id
      - name: school
        using:
          foreign_key_constraint_on: school_id
      - name: user
        using:
          foreign_key_constraint_on: user_id
    array_relationships:
      - name: answers
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: answers
      - name: communities
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: community_users
      - name: downvotedPosts
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: downvotes
      - name: questions
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: questions
      - name: uploads
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: uploads
      - name: upvotedPosts
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: upvotes
    computed_fields:
      - name: userName
        definition:
          function:
            schema: public
            name: profile_user_name
          table_argument: profile
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - profile_id
            - user_id
            - first_name
            - pen_name
            - use_pen_name
            - last_name
            - avatar_url
            - description
            - school_id
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - profile_id
            - user_id
            - first_name
            - pen_name
            - use_pen_name
            - last_name
            - avatar_url
            - description
            - school_id
            - updated_at
            - created_at
          filter: {}
    update_permissions:
      - role: student
        permission:
          columns:
            - first_name
            - last_name
            - pen_name
            - use_pen_name
            - avatar_url
            - description
          filter:
            profile_id:
              _eq: x-hasura-profile-id
          check: {}
          set:
            profile_id: x-hasura-profile-id
    event_triggers:
      - name: profilesLogger
        definition:
          enable_manual: true
          insert:
            columns: "*"
          delete:
            columns: "*"
          update:
            columns:
              - use_pen_name
              - profile_id
              - school_id
              - user_id
              - avatar_url
              - description
              - first_name
              - last_name
              - pen_name
              - created_at
              - updated_at
        retry_conf:
          num_retries: 0
          interval_sec: 10
          timeout_sec: 60
        webhook: https://logre.io/api/boxes/275580605879550469/logs
        headers:
          - value: AF2E4169-AF19-4B0B-8330-C5A6B8629553
            name: Authorization
  - table:
      schema: public
      name: questions
    configuration:
      custom_root_fields:
        insert: createQuestions
        select_aggregate: questionsAggregate
        insert_one: createQuestion
        select_by_pk: question
        select: questions
        delete: deleteQuestions
        update: updateQuestions
        delete_by_pk: deleteQuestion
        update_by_pk: updateQuestion
      custom_column_names:
        question_id: questionId
        body: body
        updated_at: updatedAt
        user_profile_id: userProfileId
        created_at: createdAt
    object_relationships:
      - name: post
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: posts
            column_mapping:
              question_id: question_id
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    array_relationships:
      - name: responses
        using:
          foreign_key_constraint_on:
            column: question_id
            table:
              schema: public
              name: responses
    insert_permissions:
      - role: student
        permission:
          check:
            user_profile_id:
              _eq: x-hasura-profile-id
          set:
            user_profile_id: x-hasura-profile-id
          columns:
            - body
          backend_only: false
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - question_id
            - body
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - question_id
            - body
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: responses
    configuration:
      custom_root_fields:
        insert: createResponses
        select_aggregate: responsesAggregate
        insert_one: createResponse
        select_by_pk: response
        select: responses
        delete: deleteResponses
        update: updateResponses
        delete_by_pk: deleteResponse
        update_by_pk: updateResponse
      custom_column_names:
        question_id: questionId
        updated_at: updatedAt
        created_at: createdAt
        response_post_id: responsePostId
    object_relationships:
      - name: question
        using:
          foreign_key_constraint_on: question_id
      - name: responsePost
        using:
          foreign_key_constraint_on: response_post_id
    insert_permissions:
      - role: student
        permission:
          check: {}
          columns:
            - question_id
            - response_post_id
          backend_only: false
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - question_id
            - response_post_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
      - role: student
        permission:
          columns:
            - question_id
            - response_post_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
  - table:
      schema: public
      name: school_domains
    configuration:
      custom_root_fields:
        insert: createSchoolDomains
        select_aggregate: schoolDomainsAggregate
        insert_one: createSchoolDomain
        select_by_pk: schoolDomain
        select: schoolDomains
        delete: deleteSchoolDomains
        update: updateSchoolDomains
        delete_by_pk: deleteSchoolDomain
        update_by_pk: updateSchoolDomain
      custom_column_names:
        domain: domain
        school_id: schoolId
    object_relationships:
      - name: school
        using:
          foreign_key_constraint_on: school_id
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - domain
            - school_id
          filter: {}
      - role: student
        permission:
          columns:
            - domain
            - school_id
          filter: {}
  - table:
      schema: public
      name: schools
    configuration:
      custom_root_fields:
        insert: createSchools
        select_aggregate: schoolsAggregate
        insert_one: createSchool
        select_by_pk: school
        select: schools
        delete: deleteSchools
        update: updateSchools
        delete_by_pk: deleteSchool
        update_by_pk: updateSchool
      custom_column_names:
        school_id: schoolId
        name: name
        updated_at: updatedAt
        created_at: createdAt
    array_relationships:
      - name: communities
        using:
          foreign_key_constraint_on:
            column: school_id
            table:
              schema: public
              name: communities
      - name: courses
        using:
          foreign_key_constraint_on:
            column: school_id
            table:
              schema: public
              name: courses
      - name: domains
        using:
          foreign_key_constraint_on:
            column: school_id
            table:
              schema: public
              name: school_domains
      - name: users
        using:
          foreign_key_constraint_on:
            column: school_id
            table:
              schema: public
              name: profiles
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - school_id
            - name
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - school_id
            - name
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: semesters
    configuration:
      custom_root_fields:
        insert: createSemesters
        select_aggregate: semestersAggregate
        insert_one: createSemester
        select_by_pk: semester
        select: semesters
        delete: deleteSemesters
        update: updateSemesters
        delete_by_pk: deleteSemester
        update_by_pk: updateSemester
      custom_column_names:
        semester_id: semesterId
        updated_at: updatedAt
        created_at: createdAt
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - semester_id
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - semester_id
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: sessions
    configuration:
      custom_root_fields:
        insert: createSessions
        select_aggregate: sessionsAggregate
        insert_one: createSession
        select_by_pk: session
        select: sessions
        delete: deleteSessions
        update: updateSessions
        delete_by_pk: deleteSession
        update_by_pk: updateSession
      custom_column_names:
        session_id: sessionId
        token: token
        updated_at: updatedAt
        created_at: createdAt
        metadata: metadata
        is_valid: isValid
        user_id: userId
    object_relationships:
      - name: user
        using:
          foreign_key_constraint_on: user_id
    select_permissions:
      - role: student
        permission:
          columns:
            - session_id
            - token
            - is_valid
            - metadata
            - user_id
            - updated_at
            - created_at
          filter:
            user_id:
              _eq: X-Hasura-User-Id
  - table:
      schema: public
      name: subject_areas
    configuration:
      custom_root_fields:
        insert: createSubjectAreas
        select_aggregate: subjectAreasAggregate
        insert_one: createSubjectArea
        select_by_pk: subjectArea
        select: subjectAreas
        delete: deleteSubjectAreas
        update: updateSubjectAreas
        delete_by_pk: deleteSubjectArea
        update_by_pk: updateSubjectArea
      custom_column_names:
        subject_area_id: subjectAreaId
        name: name
        updated_at: updatedAt
        short_name: shortName
        created_at: createdAt
        description: description
    array_relationships:
      - name: communities
        using:
          foreign_key_constraint_on:
            column: subject_area_id
            table:
              schema: public
              name: communities
      - name: courses
        using:
          foreign_key_constraint_on:
            column: subject_area_id
            table:
              schema: public
              name: courses
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - subject_area_id
            - name
            - short_name
            - description
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - subject_area_id
            - name
            - short_name
            - description
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: uploads
    configuration:
      custom_root_fields:
        insert: createUploads
        select_aggregate: uploadsAggregate
        insert_one: createUpload
        select_by_pk: upload
        select: uploads
        delete: deleteUploads
        update: updateUploads
        delete_by_pk: deleteUpload
        update_by_pk: updateUpload
      custom_column_names:
        note_id: noteId
        upload_id: uploadId
        updated_at: updatedAt
        user_profile_id: userProfileId
        created_at: createdAt
    object_relationships:
      - name: note
        using:
          foreign_key_constraint_on: note_id
      - name: post
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: posts
            column_mapping:
              upload_id: upload_id
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    insert_permissions:
      - role: student
        permission:
          check:
            user_profile_id:
              _eq: x-hasura-profile-id
          set:
            user_profile_id: x-hasura-profile-id
          columns:
            - note_id
          backend_only: false
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - upload_id
            - user_profile_id
            - note_id
            - updated_at
            - created_at
          filter: {}
      - role: student
        permission:
          columns:
            - upload_id
            - user_profile_id
            - note_id
            - updated_at
            - created_at
          filter: {}
  - table:
      schema: public
      name: upvotes
    configuration:
      custom_root_fields:
        insert: createUpvotes
        select_aggregate: upvotesAggregate
        insert_one: createUpvote
        select_by_pk: upvote
        select: upvotes
        delete: deleteUpvotes
        update: updateUpvotes
        delete_by_pk: deleteUpvote
        update_by_pk: updateUpvote
      custom_column_names:
        post_id: postId
        updated_at: updatedAt
        user_profile_id: userProfileId
        created_at: createdAt
    object_relationships:
      - name: post
        using:
          foreign_key_constraint_on: post_id
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    insert_permissions:
      - role: student
        permission:
          check:
            user_profile_id:
              _eq: x-hasura-profile-id
          set:
            user_profile_id: x-hasura-profile-id
          columns:
            - post_id
          backend_only: false
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - post_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
      - role: student
        permission:
          columns:
            - post_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
    delete_permissions:
      - role: student
        permission:
          filter:
            user_profile_id:
              _eq: x-hasura-profile-id
    event_triggers:
      - name: postGetsUpvoted
        definition:
          enable_manual: true
          insert:
            columns: "*"
        retry_conf:
          num_retries: 0
          interval_sec: 10
          timeout_sec: 60
        webhook_from_env: NOTIFICATIONS_TRIGGER_URL
  - table:
      schema: public
      name: user_roles
    is_enum: true
    configuration:
      custom_root_fields:
        insert: createUserRoles
        select_aggregate: userRolesAggregate
        insert_one: createUserRole
        select_by_pk: userRole
        select: userRoles
        delete: deleteUserRoles
        update: updateUserRoles
        delete_by_pk: deleteUserRole
        update_by_pk: updateUserRole
      custom_column_names:
        value: value
  - table:
      schema: public
      name: users
    configuration:
      custom_root_fields:
        insert: createUsers
        select_aggregate: usersAggregate
        insert_one: createUser
        select_by_pk: user
        select: users
        delete: deleteUsers
        update: updateUsers
        delete_by_pk: deleteUser
        update_by_pk: updateUser
      custom_column_names:
        email: email
        is_deactivated: isDeactivated
        role: role
        updated_at: updatedAt
        created_at: createdAt
        is_verified: isVerified
        user_id: userId
    object_relationships:
      - name: profile
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: profiles
            column_mapping:
              user_id: user_id
    array_relationships:
      - name: services
        using:
          foreign_key_constraint_on:
            column: user_id
            table:
              schema: public
              name: auth_services
      - name: sessions
        using:
          foreign_key_constraint_on:
            column: user_id
            table:
              schema: public
              name: sessions
    select_permissions:
      - role: student
        permission:
          columns:
            - user_id
            - email
            - is_verified
            - is_deactivated
            - role
            - updated_at
            - created_at
          filter:
            user_id:
              _eq: X-Hasura-User-Id
    event_triggers:
      - name: logger
        definition:
          enable_manual: true
          insert:
            columns: "*"
          delete:
            columns: "*"
          update:
            columns:
              - is_deactivated
              - is_verified
              - user_id
              - email
              - role
              - created_at
              - updated_at
        retry_conf:
          num_retries: 0
          interval_sec: 10
          timeout_sec: 60
        webhook: https://logre.io/api/boxes/275580605879550469/logs
        headers:
          - value: AF2E4169-AF19-4B0B-8330-C5A6B8629553
            name: Authorization
remote_schemas:
  - name: accounts
    definition:
      url_from_env: ACCOUNT_SCHEMA_URL
      timeout_seconds: 60
      forward_client_headers: true
actions:
  - name: createImagePdfUrl
    definition:
      handler: "{{ACTION_BASE_URL}}/create-image-pdf-url"
      output_type: CreateImagePDFUrlOutput
      arguments:
        - name: data
          type: CreateImagePDFUrlInput!
      type: mutation
      kind: synchronous
    permissions:
      - role: student
  - name: createThumbnailUrl
    definition:
      handler: "{{ACTION_BASE_URL}}/create-thumbnail-url"
      output_type: CreateThumbnailUrlOutput
      arguments:
        - name: data
          type: CreateThumbnailUrlInput!
      type: mutation
      kind: synchronous
    permissions:
      - role: student
  - name: createUploadUrl
    definition:
      handler: "{{ACTION_BASE_URL}}/create-upload-url"
      output_type: CreateUploadUrlOutput
      arguments:
        - name: data
          type: CreateUploadUrlInput!
      type: mutation
      kind: synchronous
    permissions:
      - role: student
  - name: sendPushNotification
    definition:
      handler: "{{ACTION_BASE_URL}}/send-push-notification"
      output_type: SendPushNotificationOutput
      arguments:
        - name: data
          type: SendPushNotificationInput!
      type: mutation
      kind: synchronous
    permissions:
      - role: student
custom_types:
  input_objects:
    - name: CreateUploadUrlInput
      fields:
        - name: contentType
          type: String!
    - name: CreateThumbnailUrlInput
      fields:
        - name: s3key
          type: String!
    - name: CreateImagePDFUrlInput
      fields:
        - name: imgS3Key
          type: String!
    - name: SendPushNotificationInput
      fields:
        - name: userProfileId
          type: Int!
        - name: body
          type: String!
  objects:
    - name: CreateUploadUrlOutput
      fields:
        - name: presignedPost
          type: String!
    - name: CreateThumbnailUrlOutput
      fields:
        - name: thumbnailUrl
          type: String!
    - name: CreateImagePDFUrlOutput
      fields:
        - name: pdfS3Key
          type: String!
    - name: SendPushNotificationOutput
      fields:
        - name: status
          type: Int!
