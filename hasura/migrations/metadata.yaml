version: 2
tables:
  - table:
      schema: public
      name: users
    configuration:
      custom_column_names:
        user_id: userId
        email: email
        is_verified: isVerified
        is_deactivated: isDeactivated
        role: role
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: users
        select_aggregate: usersAggregate
        select_by_pk: user
        insert: createUsers
        insert_one: createUser
        update: updateUsers
        update_by_pk: updateUser
        delete: deleteUsers
        delete_by_pk: deleteUser
    object_relationships:
      - name: profile
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: profiles
            column_mapping:
              user_id: user_id
    array_relationships:
      - name: services
        using:
          foreign_key_constraint_on:
            column: user_id
            table:
              schema: public
              name: auth_services
      - name: sessions
        using:
          foreign_key_constraint_on:
            column: user_id
            table:
              schema: public
              name: sessions
    select_permissions:
      - role: student
        permission:
          columns:
            - user_id
            - email
            - is_verified
            - is_deactivated
            - role
            - updated_at
            - created_at
          filter:
            user_id:
              _eq: X-Hasura-User-Id
          allow_aggregations: false
  - table:
      schema: public
      name: sessions
    configuration:
      custom_column_names:
        session_id: sessionId
        token: token
        is_valid: isValid
        metadata: metadata
        user_id: userId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: sessions
        select_aggregate: sessionsAggregate
        select_by_pk: session
        insert: createSessions
        insert_one: createSession
        update: updateSessions
        update_by_pk: updateSession
        delete: deleteSessions
        delete_by_pk: deleteSession
    object_relationships:
      - name: user
        using:
          foreign_key_constraint_on: user_id
    select_permissions:
      - role: student
        permission:
          columns:
            - session_id
            - token
            - is_valid
            - metadata
            - user_id
            - updated_at
            - created_at
          filter:
            user_id:
              _eq: X-Hasura-User-Id
          allow_aggregations: false
  - table:
      schema: public
      name: user_roles
    configuration:
      custom_column_names:
        value: value
      custom_root_fields:
        select: userRoles
        select_aggregate: userRolesAggregate
        select_by_pk: userRole
        insert: createUserRoles
        insert_one: createUserRole
        update: updateUserRoles
        update_by_pk: updateUserRole
        delete: deleteUserRoles
        delete_by_pk: deleteUserRole
  - table:
      schema: public
      name: auth_services
    configuration:
      custom_column_names:
        auth_service_id: authServiceId
        service_name: serviceName
        options: options
        token: token
        service_id: serviceId
        user_id: userId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: authServices
        select_aggregate: authServicesAggregate
        select_by_pk: authService
        insert: createAuthServices
        insert_one: createAuthService
        update: updateAuthServices
        update_by_pk: updateAuthService
        delete: deleteAuthServices
        delete_by_pk: deleteAuthService
    object_relationships:
      - name: user
        using:
          foreign_key_constraint_on: user_id
    select_permissions:
      - role: student
        permission:
          columns:
            - auth_service_id
            - service_name
            - options
            - token
            - service_id
            - user_id
            - updated_at
            - created_at
          filter:
            user_id:
              _eq: X-Hasura-User-Id
          allow_aggregations: false
  - table:
      schema: public
      name: profiles
    configuration:
      custom_column_names:
        profile_id: profileId
        user_id: userId
        first_name: firstName
        pen_name: penName
        use_pen_name: usePenName
        last_name: lastName
        avatar_url: avatarUrl
        description: description
        school_id: schoolId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: profiles
        select_aggregate: profilesAggregate
        select_by_pk: profile
        insert: createProfiles
        insert_one: createProfile
        update: updateProfiles
        update_by_pk: updateProfile
        delete: deleteProfiles
        delete_by_pk: deleteProfile
    object_relationships:
      - name: user
        using:
          foreign_key_constraint_on: user_id
      - name: school
        using:
          foreign_key_constraint_on: school_id
      - name: notificationPreference
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: notification_preferences
            column_mapping:
              profile_id: user_profile_id
    array_relationships:
      - name: notifications
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: notifications
      - name: questions
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: questions
      - name: answers
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: answers
      - name: uploads
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: uploads
      - name: upvotedPosts
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: upvotes
      - name: downvotedPosts
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: downvotes
      - name: communities
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: community_users
      - name: library
        using:
          foreign_key_constraint_on:
            column: user_profile_id
            table:
              schema: public
              name: note_users
    computed_fields:
      - name: userName
        definition:
          function:
            schema: public
            name: profile_user_name
          table_argument: profile
    select_permissions:
      - role: student
        permission:
          columns:
            - profile_id
            - user_id
            - first_name
            - pen_name
            - use_pen_name
            - last_name
            - avatar_url
            - description
            - school_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: anonymous
        permission:
          columns:
            - profile_id
            - user_id
            - first_name
            - pen_name
            - use_pen_name
            - last_name
            - avatar_url
            - description
            - school_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
    update_permissions:
      - role: student
        permission:
          columns:
            - first_name
            - last_name
            - pen_name
            - use_pen_name
            - avatar_url
            - description
          filter:
            profile_id:
              _eq: x-hasura-profile-id
          set:
            profile_id: x-hasura-profile-id
          check: {}
  - table:
      schema: public
      name: schools
    configuration:
      custom_column_names:
        school_id: schoolId
        name: name
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: schools
        select_aggregate: schoolsAggregate
        select_by_pk: school
        insert: createSchools
        insert_one: createSchool
        update: updateSchools
        update_by_pk: updateSchool
        delete: deleteSchools
        delete_by_pk: deleteSchool
    array_relationships:
      - name: users
        using:
          foreign_key_constraint_on:
            column: school_id
            table:
              schema: public
              name: profiles
      - name: communities
        using:
          foreign_key_constraint_on:
            column: school_id
            table:
              schema: public
              name: communities
      - name: courses
        using:
          foreign_key_constraint_on:
            column: school_id
            table:
              schema: public
              name: courses
      - name: domains
        using:
          foreign_key_constraint_on:
            column: school_id
            table:
              schema: public
              name: school_domains
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - school_id
            - name
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: student
        permission:
          columns:
            - school_id
            - name
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
  - table:
      schema: public
      name: school_domains
    configuration:
      custom_column_names:
        domain: domain
        school_id: schoolId
      custom_root_fields:
        select: schoolDomains
        select_aggregate: schoolDomainsAggregate
        select_by_pk: schoolDomain
        insert: createSchoolDomains
        insert_one: createSchoolDomain
        update: updateSchoolDomains
        update_by_pk: updateSchoolDomain
        delete: deleteSchoolDomains
        delete_by_pk: deleteSchoolDomain
    object_relationships:
      - name: school
        using:
          foreign_key_constraint_on: school_id
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - domain
            - school_id
          filter: {}
          allow_aggregations: false
      - role: student
        permission:
          columns:
            - domain
            - school_id
          filter: {}
          allow_aggregations: false
  - table:
      schema: public
      name: subject_areas
    configuration:
      custom_column_names:
        subject_area_id: subjectAreaId
        name: name
        short_name: shortName
        description: description
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: subjectAreas
        select_aggregate: subjectAreasAggregate
        select_by_pk: subjectArea
        insert: createSubjectAreas
        insert_one: createSubjectArea
        update: updateSubjectAreas
        update_by_pk: updateSubjectArea
        delete: deleteSubjectAreas
        delete_by_pk: deleteSubjectArea
    array_relationships:
      - name: communities
        using:
          foreign_key_constraint_on:
            column: subject_area_id
            table:
              schema: public
              name: communities
      - name: courses
        using:
          foreign_key_constraint_on:
            column: subject_area_id
            table:
              schema: public
              name: courses
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - subject_area_id
            - name
            - short_name
            - description
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: student
        permission:
          columns:
            - subject_area_id
            - name
            - short_name
            - description
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
  - table:
      schema: public
      name: professional_areas
    configuration:
      custom_column_names:
        professional_area_id: professionalAreaId
        name: name
        short_name: shortName
        description: description
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: professionalAreas
        select_aggregate: professionalAreasAggregate
        select_by_pk: professionalArea
        insert: createProfessionalAreas
        insert_one: createProfessionalArea
        update: updateProfessionalAreas
        update_by_pk: updateProfessionalArea
        delete: deleteProfessionalAreas
        delete_by_pk: deleteProfessionalArea
    array_relationships:
      - name: communities
        using:
          foreign_key_constraint_on:
            column: professional_area_id
            table:
              schema: public
              name: communities
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - professional_area_id
            - name
            - short_name
            - description
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: student
        permission:
          columns:
            - professional_area_id
            - name
            - short_name
            - description
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
  - table:
      schema: public
      name: courses
    configuration:
      custom_column_names:
        course_id: courseId
        name: name
        course_number: courseNumber
        subject_code: subjectCode
        description: description
        subject_area_id: subjectAreaId
        school_id: schoolId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: courses
        select_aggregate: coursesAggregate
        select_by_pk: course
        insert: createCourses
        insert_one: createCourse
        update: updateCourses
        update_by_pk: updateCourse
        delete: deleteCourses
        delete_by_pk: deleteCourse
    object_relationships:
      - name: subjectArea
        using:
          foreign_key_constraint_on: subject_area_id
      - name: school
        using:
          foreign_key_constraint_on: school_id
      - name: community
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: communities
            column_mapping:
              course_id: course_id
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - course_id
            - name
            - course_number
            - subject_code
            - description
            - subject_area_id
            - school_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: student
        permission:
          columns:
            - course_id
            - name
            - course_number
            - subject_code
            - description
            - subject_area_id
            - school_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
  - table:
      schema: public
      name: semesters
    configuration:
      custom_column_names:
        semester_id: semesterId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: semesters
        select_aggregate: semestersAggregate
        select_by_pk: semester
        insert: createSemesters
        insert_one: createSemester
        update: updateSemesters
        update_by_pk: updateSemester
        delete: deleteSemesters
        delete_by_pk: deleteSemester
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - semester_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: student
        permission:
          columns:
            - semester_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
  - table:
      schema: public
      name: communities
    configuration:
      custom_column_names:
        community_id: communityId
        community_type: communityType
        school_id: schoolId
        course_id: courseId
        subject_area_id: subjectAreaId
        professional_area_id: professionalAreaId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: communities
        select_aggregate: communitiesAggregate
        select_by_pk: community
        insert: createCommunities
        insert_one: createCommunity
        update: updateCommunities
        update_by_pk: updateCommunity
        delete: deleteCommunities
        delete_by_pk: deleteCommunity
    object_relationships:
      - name: school
        using:
          foreign_key_constraint_on: school_id
      - name: course
        using:
          foreign_key_constraint_on: course_id
      - name: subjectArea
        using:
          foreign_key_constraint_on: subject_area_id
      - name: professionalArea
        using:
          foreign_key_constraint_on: professional_area_id
    array_relationships:
      - name: users
        using:
          foreign_key_constraint_on:
            column: community_id
            table:
              schema: public
              name: community_users
      - name: posts
        using:
          foreign_key_constraint_on:
            column: community_id
            table:
              schema: public
              name: community_posts
    select_permissions:
      - role: anonymous
        permission:
          columns:
            - community_id
            - community_type
            - school_id
            - course_id
            - subject_area_id
            - professional_area_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: student
        permission:
          columns:
            - community_id
            - community_type
            - school_id
            - course_id
            - subject_area_id
            - professional_area_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
  - table:
      schema: public
      name: community_users
    configuration:
      custom_column_names:
        community_id: communityId
        user_profile_id: userProfileId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: communityUsers
        select_aggregate: communityUsersAggregate
        select_by_pk: communityUser
        insert: createCommunityUsers
        insert_one: createCommunityUser
        update: updateCommunityUsers
        update_by_pk: updateCommunityUser
        delete: deleteCommunityUsers
        delete_by_pk: deleteCommunityUser
    object_relationships:
      - name: community
        using:
          foreign_key_constraint_on: community_id
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    select_permissions:
      - role: student
        permission:
          columns:
            - community_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
      - role: anonymous
        permission:
          columns:
            - community_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
    insert_permissions:
      - role: student
        permission:
          columns:
            - community_id
          set:
            user_profile_id: x-hasura-profile-id
          check:
            user_profile_id:
              _eq: x-hasura-profile-id
          backend_only: false
  - table:
      schema: public
      name: community_types
    configuration:
      custom_column_names:
        value: value
      custom_root_fields:
        select: communityTypes
        select_aggregate: communityTypesAggregate
        select_by_pk: communityType
        insert: createCommunityTypes
        insert_one: createCommunityType
        update: updateCommunityTypes
        update_by_pk: updateCommunityType
        delete: deleteCommunityTypes
        delete_by_pk: deleteCommunityType
  - table:
      schema: public
      name: posts
    configuration:
      custom_column_names:
        post_id: postId
        question_id: questionId
        upload_id: uploadId
        answer_id: answerId
        announcement_id: announcementId
        post_type: postType
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: posts
        select_aggregate: postsAggregate
        select_by_pk: post
        insert: createPosts
        insert_one: createPost
        update: updatePosts
        update_by_pk: updatePost
        delete: deletePosts
        delete_by_pk: deletePost
    object_relationships:
      - name: question
        using:
          foreign_key_constraint_on: question_id
      - name: upload
        using:
          foreign_key_constraint_on: upload_id
      - name: answer
        using:
          foreign_key_constraint_on: answer_id
      - name: announcement
        using:
          foreign_key_constraint_on: announcement_id
      - name: responseTo
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: responses
            column_mapping:
              post_id: response_post_id
    array_relationships:
      - name: communities
        using:
          foreign_key_constraint_on:
            column: post_id
            table:
              schema: public
              name: community_posts
      - name: upvotes
        using:
          foreign_key_constraint_on:
            column: post_id
            table:
              schema: public
              name: upvotes
      - name: downvotes
        using:
          foreign_key_constraint_on:
            column: post_id
            table:
              schema: public
              name: downvotes
    computed_fields:
      - name: upvotedByMe
        definition:
          function:
            schema: public
            name: post_upvoted_by_me
          table_argument: post
          session_argument: hasura_session
    select_permissions:
      - role: student
        permission:
          columns:
            - post_id
            - question_id
            - upload_id
            - answer_id
            - announcement_id
            - post_type
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: anonymous
        permission:
          columns:
            - post_id
            - question_id
            - upload_id
            - answer_id
            - announcement_id
            - post_type
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
    insert_permissions:
      - role: student
        permission:
          columns:
            - post_type
            - question_id
            - answer_id
            - upload_id
          set: {}
          check: {}
          backend_only: false
  - table:
      schema: public
      name: community_posts
    configuration:
      custom_column_names:
        community_id: communityId
        post_id: postId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: communityPosts
        select_aggregate: communityPostsAggregate
        select_by_pk: communityPost
        insert: createCommunityPosts
        insert_one: createCommunityPost
        update: updateCommunityPosts
        update_by_pk: updateCommunityPost
        delete: deleteCommunityPosts
        delete_by_pk: deleteCommunityPost
    object_relationships:
      - name: community
        using:
          foreign_key_constraint_on: community_id
      - name: post
        using:
          foreign_key_constraint_on: post_id
    select_permissions:
      - role: student
        permission:
          columns:
            - community_id
            - post_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: anonymous
        permission:
          columns:
            - community_id
            - post_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
    insert_permissions:
      - role: student
        permission:
          columns:
            - post_id
            - community_id
          set: {}
          check: {}
          backend_only: false
  - table:
      schema: public
      name: questions
    configuration:
      custom_column_names:
        question_id: questionId
        body: body
        user_profile_id: userProfileId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: questions
        select_aggregate: questionsAggregate
        select_by_pk: question
        insert: createQuestions
        insert_one: createQuestion
        update: updateQuestions
        update_by_pk: updateQuestion
        delete: deleteQuestions
        delete_by_pk: deleteQuestion
    object_relationships:
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
      - name: post
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: posts
            column_mapping:
              question_id: question_id
    array_relationships:
      - name: responses
        using:
          foreign_key_constraint_on:
            column: question_id
            table:
              schema: public
              name: responses
    select_permissions:
      - role: student
        permission:
          columns:
            - question_id
            - body
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: anonymous
        permission:
          columns:
            - question_id
            - body
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
    insert_permissions:
      - role: student
        permission:
          columns:
            - body
          set:
            user_profile_id: x-hasura-profile-id
          check:
            user_profile_id:
              _eq: x-hasura-profile-id
          backend_only: false
  - table:
      schema: public
      name: answers
    configuration:
      custom_column_names:
        answer_id: answerId
        body: body
        user_profile_id: userProfileId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: answers
        select_aggregate: answersAggregate
        select_by_pk: answer
        insert: createAnswers
        insert_one: createAnswer
        update: updateAnswers
        update_by_pk: updateAnswer
        delete: deleteAnswers
        delete_by_pk: deleteAnswer
    object_relationships:
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
      - name: post
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: posts
            column_mapping:
              answer_id: answer_id
    select_permissions:
      - role: student
        permission:
          columns:
            - answer_id
            - body
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: anonymous
        permission:
          columns:
            - answer_id
            - body
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
    insert_permissions:
      - role: student
        permission:
          columns:
            - body
          set:
            user_profile_id: x-hasura-profile-id
          check:
            user_profile_id:
              _eq: x-hasura-profile-id
          backend_only: false
  - table:
      schema: public
      name: uploads
    configuration:
      custom_column_names:
        upload_id: uploadId
        user_profile_id: userProfileId
        note_id: noteId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: uploads
        select_aggregate: uploadsAggregate
        select_by_pk: upload
        insert: createUploads
        insert_one: createUpload
        update: updateUploads
        update_by_pk: updateUpload
        delete: deleteUploads
        delete_by_pk: deleteUpload
    object_relationships:
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
      - name: note
        using:
          foreign_key_constraint_on: note_id
      - name: post
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: posts
            column_mapping:
              upload_id: upload_id
    insert_permissions:
      - role: student
        permission:
          columns:
            - note_id
          set:
            user_profile_id: x-hasura-profile-id
          check:
            user_profile_id:
              _eq: x-hasura-profile-id
          backend_only: false
    select_permissions:
      - role: student
        permission:
          columns:
            - upload_id
            - user_profile_id
            - note_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: anonymous
        permission:
          columns:
            - upload_id
            - user_profile_id
            - note_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
  - table:
      schema: public
      name: responses
    configuration:
      custom_column_names:
        question_id: questionId
        response_post_id: responsePostId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: responses
        select_aggregate: responsesAggregate
        select_by_pk: response
        insert: createResponses
        insert_one: createResponse
        update: updateResponses
        update_by_pk: updateResponse
        delete: deleteResponses
        delete_by_pk: deleteResponse
    object_relationships:
      - name: question
        using:
          foreign_key_constraint_on: question_id
      - name: responsePost
        using:
          foreign_key_constraint_on: response_post_id
    select_permissions:
      - role: student
        permission:
          columns:
            - question_id
            - response_post_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
      - role: anonymous
        permission:
          columns:
            - question_id
            - response_post_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
    insert_permissions:
      - role: student
        permission:
          columns:
            - question_id
            - response_post_id
          set: {}
          check: {}
          backend_only: false
    event_triggers:
      - name: responsesNotification
        definition:
          enable_manual: true
          insert:
            columns: "*"
        headers: []
        retry_conf:
          num_retries: 0
          interval_sec: 10
          timeout_sec: 60
        webhook_from_env: NOTIFICATIONS_TRIGGER_URL
  - table:
      schema: public
      name: announcements
    configuration:
      custom_column_names:
        announcement_id: announcementId
        body: body
        action_description: actionDescription
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: announcements
        select_aggregate: announcementsAggregate
        select_by_pk: announcement
        insert: createAnnouncements
        insert_one: createAnnouncement
        update: updateAnnouncements
        update_by_pk: updateAnnouncement
        delete: deleteAnnouncements
        delete_by_pk: deleteAnnouncement
    object_relationships:
      - name: post
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: posts
            column_mapping:
              announcement_id: announcement_id
    select_permissions:
      - role: student
        permission:
          columns:
            - announcement_id
            - body
            - action_description
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: anonymous
        permission:
          columns:
            - announcement_id
            - body
            - action_description
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
  - table:
      schema: public
      name: post_types
    configuration:
      custom_column_names:
        value: value
      custom_root_fields:
        select: postTypes
        select_aggregate: postTypesAggregate
        select_by_pk: postType
        insert: createPostTypes
        insert_one: createPostType
        update: updatePostTypes
        update_by_pk: updatePostType
        delete: deletePostTypes
        delete_by_pk: deletePostType
  - table:
      schema: public
      name: upvotes
    configuration:
      custom_column_names:
        post_id: postId
        user_profile_id: userProfileId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: upvotes
        select_aggregate: upvotesAggregate
        select_by_pk: upvote
        insert: createUpvotes
        insert_one: createUpvote
        update: updateUpvotes
        update_by_pk: updateUpvote
        delete: deleteUpvotes
        delete_by_pk: deleteUpvote
    object_relationships:
      - name: post
        using:
          foreign_key_constraint_on: post_id
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    select_permissions:
      - role: student
        permission:
          columns:
            - post_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
      - role: anonymous
        permission:
          columns:
            - post_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
    insert_permissions:
      - role: student
        permission:
          columns:
            - post_id
          set:
            user_profile_id: x-hasura-profile-id
          check:
            user_profile_id:
              _eq: x-hasura-profile-id
          backend_only: false
    delete_permissions:
      - role: student
        permission:
          filter:
            user_profile_id:
              _eq: x-hasura-profile-id
    event_triggers:
      - name: upvotesNotification
        definition:
          enable_manual: true
          insert:
            columns: "*"
        headers: []
        retry_conf:
          num_retries: 0
          interval_sec: 10
          timeout_sec: 60
        webhook_from_env: NOTIFICATIONS_TRIGGER_URL
  - table:
      schema: public
      name: downvotes
    configuration:
      custom_column_names:
        post_id: postId
        user_profile_id: userProfileId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: downvotes
        select_aggregate: downvotesAggregate
        select_by_pk: downvote
        insert: createDownvotes
        insert_one: createDownvote
        update: updateDownvotes
        update_by_pk: updateDownvote
        delete: deleteDownvotes
        delete_by_pk: deleteDownvote
    object_relationships:
      - name: post
        using:
          foreign_key_constraint_on: post_id
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    select_permissions:
      - role: student
        permission:
          columns:
            - post_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
      - role: anonymous
        permission:
          columns:
            - post_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
    insert_permissions:
      - role: student
        permission:
          columns:
            - post_id
          set:
            user_profile_id: x-hasura-profile-id
          check:
            post:
              post_type:
                _neq: QUESTION
          backend_only: false
    delete_permissions:
      - role: student
        permission:
          filter:
            user_profile_id:
              _eq: x-hasura-profile-id
  - table:
      schema: public
      name: note_categories
    configuration:
      custom_column_names:
        value: value
      custom_root_fields:
        select: noteCategories
        select_aggregate: noteCategoriesAggregate
        select_by_pk: noteCategory
        insert: createNoteCategories
        insert_one: createNoteCategory
        update: updateNoteCategories
        update_by_pk: updateNoteCategory
        delete: deleteNoteCategories
        delete_by_pk: deleteNoteCategory
  - table:
      schema: public
      name: notes
    configuration:
      custom_column_names:
        note_id: noteId
        category: category
        title: title
        description: description
        note_url: noteUrl
        preview_thumbnail_url: previewThumbnailUrl
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: notes
        select_aggregate: notesAggregate
        select_by_pk: note
        insert: createNotes
        insert_one: createNote
        update: updateNotes
        update_by_pk: updateNote
        delete: deleteNotes
        delete_by_pk: deleteNote
    object_relationships:
      - name: upload
        using:
          manual_configuration:
            remote_table:
              schema: public
              name: uploads
            column_mapping:
              note_id: note_id
    computed_fields:
      - name: isAddedToMyLibrary
        definition:
          function:
            schema: public
            name: note_is_added_to_my_library
          table_argument: note
          session_argument: hasura_session
    select_permissions:
      - role: student
        permission:
          columns:
            - note_id
            - category
            - title
            - description
            - note_url
            - preview_thumbnail_url
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
      - role: anonymous
        permission:
          columns:
            - note_id
            - category
            - title
            - description
            - note_url
            - preview_thumbnail_url
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: false
    insert_permissions:
      - role: student
        permission:
          columns:
            - category
            - title
            - description
            - note_url
            - preview_thumbnail_url
          set: {}
          check: {}
          backend_only: false
  - table:
      schema: public
      name: note_users
    configuration:
      custom_column_names:
        note_id: noteId
        user_profile_id: userProfileId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: noteUsers
        select_aggregate: noteUsersAggregate
        select_by_pk: noteUser
        insert: createNoteUsers
        insert_one: createNoteUser
        update: updateNoteUsers
        update_by_pk: updateNoteUser
        delete: deleteNoteUsers
        delete_by_pk: deleteNoteUser
    object_relationships:
      - name: note
        using:
          foreign_key_constraint_on: note_id
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    select_permissions:
      - role: student
        permission:
          columns:
            - note_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
      - role: anonymous
        permission:
          columns:
            - note_id
            - user_profile_id
            - updated_at
            - created_at
          filter: {}
          allow_aggregations: true
    insert_permissions:
      - role: student
        permission:
          columns:
            - note_id
            - user_profile_id
          set: {}
          check: {}
          backend_only: false
  - table:
      schema: public
      name: notifications
    configuration:
      custom_column_names:
        notification_id: notificationId
        notification_info: notificationInfo
        user_profile_id: userProfileId
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: notifications
        select_aggregate: notificationsAggregate
        select_by_pk: notification
        insert: createNotifications
        insert_one: createNotification
        update: updateNotifications
        update_by_pk: updateNotification
        delete: deleteNotifications
        delete_by_pk: deleteNotification
    object_relationships:
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    insert_permissions:
      - role: student
        permission:
          columns:
            - notification_info
            - user_profile_id
          set: {}
          check: {}
          backend_only: false
    select_permissions:
      - role: student
        permission:
          columns:
            - notification_id
            - notification_info
            - user_profile_id
            - updated_at
            - created_at
          filter:
            user_profile_id:
              _eq: x-hasura-profile-id
          allow_aggregations: false
  - table:
      schema: public
      name: notification_preferences
    configuration:
      custom_column_names:
        notification_preference_id: notificationPreferenceId
        user_profile_id: userProfileId
        allow_push_notifications: allowPushNotifications
        push_notification_token: pushNotificationToken
        updated_at: updatedAt
        created_at: createdAt
      custom_root_fields:
        select: notificationPreferences
        select_aggregate: notificationPreferencesAggregate
        select_by_pk: notificationPreference
        insert: createNotificationPreferences
        insert_one: createNotificationPreference
        update: updateNotificationPreferences
        update_by_pk: updateNotificationPreference
        delete: deleteNotificationPreferences
        delete_by_pk: deleteNotificationPreference
    object_relationships:
      - name: userProfile
        using:
          foreign_key_constraint_on: user_profile_id
    insert_permissions:
      - role: student
        permission:
          columns:
            - allow_push_notifications
            - push_notification_token
          set:
            user_profile_id: x-hasura-profile-id
          check:
            user_profile_id:
              _eq: x-hasura-profile-id
          backend_only: false
    select_permissions:
      - role: student
        permission:
          columns:
            - notification_preference_id
            - user_profile_id
            - allow_push_notifications
            - push_notification_token
            - updated_at
            - created_at
          filter:
            user_profile_id:
              _eq: x-hasura-profile-id
          allow_aggregations: false
remote_schemas:
  - name: accounts
    definition:
      url_from_env: ACCOUNT_SCHEMA_URL
      timeout_seconds: 60
      forward_client_headers: true
  - name: upload
    definition:
      url_from_env: UPLOAD_SCHEMA_URL
      timeout_seconds: 60
      forward_client_headers: true
